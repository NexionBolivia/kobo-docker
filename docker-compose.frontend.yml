# NOTE: Generate `../kobo-deployments/` environment files using
# https://github.com/kobotoolbox/kobo-install. You may manually customize the
# files aftewards and stop using kobo-install if necessary.

version: '3'

services:
  kobocat:
    image: kobotoolbox/kobocat:two-databases_2.019.47
    hostname: kobocat
    env_file:
      - ../kobo-deployments/envfile.txt
      - ../kobo-deployments/envfiles/databases.txt
      - ../kobo-deployments/envfiles/aws.txt
      - ../kobo-deployments/envfiles/external_services.txt
      - ../kobo-deployments/envfiles/kobocat.txt
      - ../kobo-deployments/envfiles/nginx.txt
      - ../kobo-deployments/envfiles/smtp.txt
    sysctls:
      - net.core.somaxconn=2048
    environment:
      - ENKETO_PROTOCOL=https
      - KPI_PORT=8000
      - KC_UWSGI_MAX_REQUESTS=512
      - KC_UWSGI_WORKERS_COUNT=2
      - KC_UWSGI_CHEAPER_RSS_LIMIT_SOFT=134217728
      - KC_UWSGI_CHEAPER_WORKERS_COUNT=1
      # `NGINX_PUBLIC_PORT` should be declared in docker-compose.frontend.override.yml
      #- NGINX_PUBLIC_PORT=80
    volumes:
      - ./.vols/static/kobocat:/srv/static
      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
      - ./backups/kobocat:/srv/backups
      - ./log/kobocat:/srv/logs
      - ./scripts/wait_for_mongo.bash:/etc/my_init.d/01_wait_for_mongo.bash:ro
      - ./scripts/wait_for_postgres.bash:/etc/my_init.d/02_wait_for_postgres.bash:ro
      - ./scripts/wait_for_kpi.bash:/etc/my_init.d/03_wait_for_kpi.bash:ro
      - ./scripts/runtime_variables_kobocat.source.bash:/etc/profile.d/runtime_variables_kobocat.source.bash.sh:ro
      - ./uwsgi/kc_uwsgi.ini:/srv/src/kobocat/docker/kobocat.ini
    restart: on-failure
    networks:
      kobo-fe-network:
        aliases:
          - kobocat
          - kobocat.docker.container

  kpi:
    image: kobotoolbox/kpi:two-databases_2.020.12a
    hostname: kpi
    env_file:
      - ../kobo-deployments/envfile.txt
      - ../kobo-deployments/envfiles/databases.txt
      - ../kobo-deployments/envfiles/aws.txt
      - ../kobo-deployments/envfiles/external_services.txt
      - ../kobo-deployments/envfiles/kpi.txt
      - ../kobo-deployments/envfiles/nginx.txt
      - ../kobo-deployments/envfiles/smtp.txt
    sysctls:
      - net.core.somaxconn=2048
    environment:
      # `SECURE_PROXY_SSL_HEADER` should be declared in docker-compose.frontend.override.yml
      #- SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO, https
      - SYNC_KOBOCAT_XFORMS=False # Should be True on at least one frontend environment
      - KPI_UWSGI_MAX_REQUESTS=512
      - KPI_UWSGI_WORKERS_COUNT=2
      - KPI_UWSGI_CHEAPER_RSS_LIMIT_SOFT=134217728
      - KPI_UWSGI_CHEAPER_WORKERS_COUNT=1
      # `NGINX_PUBLIC_PORT` should be declared in docker-compose.frontend.override.yml
      #- NGINX_PUBLIC_PORT=80
    volumes:
      - ./.vols/static/kpi:/srv/static
      # The Whoosh search index needs persistent storage
      - ./.vols/whoosh:/srv/whoosh
      - ./log/kpi:/srv/logs
      - ./scripts/wait_for_mongo.bash:/etc/my_init.d/01_wait_for_mongo.bash:ro
      - ./scripts/wait_for_postgres.bash:/etc/my_init.d/02_wait_for_postgres.bash:ro
      - ./scripts/create_kobo_superuser.bash:/etc/my_init.d/20_create_kobo_superuser.bash:ro
      - ./scripts/runtime_variables_kpi.source.bash:/etc/profile.d/runtime_variables_kpi.source.bash.sh:ro
      - ./uwsgi/kpi_uwsgi.ini:/srv/src/kpi/uwsgi.ini
      # Allow access to Kobocat's media uploads within KPI
      - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
    restart: on-failure
    networks:
      kobo-fe-network:
        aliases:
          - kpi
          - kpi.docker.container

  nginx:
    image: kobotoolbox/nginx:latest
    hostname: nginx
    env_file:
      - ../kobo-deployments/envfile.txt
      - ../kobo-deployments/envfiles/databases.txt
      - ../kobo-deployments/envfiles/nginx.txt
      - ../kobo-deployments/envfiles/kobocat.txt
      - ../kobo-deployments/envfiles/kpi.txt
    environment:
      - TEMPLATED_VAR_REFS=$${PUBLIC_REQUEST_SCHEME} $${INTERNAL_DOMAIN_NAME} $${PUBLIC_DOMAIN_NAME} $${KOBOFORM_PUBLIC_SUBDOMAIN} $${KOBOCAT_PUBLIC_SUBDOMAIN} $${ENKETO_EXPRESS_PUBLIC_SUBDOMAIN}
      # `NGINX_PUBLIC_PORT` should be declared in docker-compose.frontend.override.yml
      #- NGINX_PUBLIC_PORT=80
    # `ports` should to be declared in docker-compose.frontend.override.yml
    # It allows `kobo-install` to specify the port without opening port 80 by default
    #ports:
    #  - 80:80
    volumes:
        - ./.vols/static:/srv/www:ro
        - ./log/nginx:/var/log/nginx
        - ./nginx/:/tmp/kobo_nginx/:ro
        - ./nginx/nginx_command.bash:/etc/service/nginx/run:ro
        - ./secrets/:/tmp/kobo_toolbox_secrets/:ro
        - ./.vols/kobocat_media_uploads:/media
    restart: on-failure
    networks:
      kobo-fe-network:
        aliases:
          - nginx
          # These aliases must match the concatenation of `*_PUBLIC_SUBDOMAIN` and `INTERNAL_DOMAIN_NAME` found in `../kobo-deployments/envfile.txt`
          # and should be declared in docker-compose.frontend.override.yml
          #- kc.docker.internal
          #- kf.docker.internal
          #- ee.docker.internal

  # Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
  enketo_express:
    image: kobotoolbox/enketo-express-extra-widgets:2.3.2
    env_file:
      - ../kobo-deployments/envfile.txt
    environment:
      - ENKETO_BUILD_IE11=true
    # TODO: Rename `ENKETO_API_TOKEN` in all configurations to `ENKETO_API_KEY` and stop overriding the entrypoint.
    entrypoint: ["/bin/bash", "-c", "ENKETO_API_KEY=\"$${ENKETO_API_TOKEN}\" \"$${ENKETO_SRC_DIR}/setup/docker/start.sh\""]
    restart: on-failure
    volumes:
      - ../kobo-deployments/enketo_express/config.json:/srv/src/enketo_express/config/config.json
      # Override Enketo Express icons.
      - ./enketo_express/favicon.ico:/srv/src/enketo_express/public/images/favicon.ico:ro
      - ./enketo_express/icon_180x180.png:/srv/src/enketo_express/public/images/icon_180x180.png:ro
      - ./.vols/enketo_express/checksum:/srv/src/enketo_express/checksum
      - ./.vols/enketo_express/build/css:/srv/src/enketo_express/public/css
      - ./.vols/enketo_express/build/js:/srv/src/enketo_express/public/js/build
      - ./.vols/enketo_express/build/locales:/srv/src/enketo_express/locales/build
    networks:
      kobo-fe-network:
        aliases:
          - enketo_express

networks:
  kobo-fe-network:
    driver: bridge
